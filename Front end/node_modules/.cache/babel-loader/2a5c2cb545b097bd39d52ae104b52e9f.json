{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Music Website\\\\Front end\\\\src\\\\screens\\\\userProfile\\\\userProfile.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './UserProfile.css'; // Assuming you have a CSS file for styling\n\n// Spotify authorization constants\nconst authEndpoint = \"https://accounts.spotify.com/authorize?\";\nconst clientId = \"414414d8645b4746a08bc76b9abd6809\";\nconst redirectUri = \"http://localhost:3000/profile\";\nconst scopes = [\"user-library-read\", \"user-read-private\", \"playlist-read-private\"];\nconst loginEndpoint = `${authEndpoint}client_id=${clientId}&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${encodeURIComponent(scopes.join(\" \"))}&response_type=token&show_dialog=true`;\nconst UserProfile = () => {\n  const [user, setUser] = useState(null);\n  const [playlists, setPlaylists] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [isSpotifyConnected, setIsSpotifyConnected] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchUserData = async () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/login');\n        return;\n      }\n      try {\n        const response = await axios.get('http://localhost:5000/api/user', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setUser(response.data);\n        setIsSpotifyConnected(response.data.isSpotifyConnected || false);\n        if (response.data.isSpotifyConnected) {\n          const playlistsResponse = await axios.get('http://localhost:5000/api/playlists', {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          setPlaylists(playlistsResponse.data);\n        }\n      } catch (err) {\n        console.error('Error fetching user data:', err);\n        setError('Failed to load user data');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchUserData();\n  }, [navigate]);\n  const handleSpotifyConnect = () => {\n    window.location.href = loginEndpoint;\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/login');\n  };\n  if (isLoading) return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, error);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Welcome, \", user === null || user === void 0 ? void 0 : user.username), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }\n  }, \"Email:\"), \" \", user === null || user === void 0 ? void 0 : user.email), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }\n  }, \"Member since:\"), \" \", new Date(user === null || user === void 0 ? void 0 : user.createdAt).toLocaleDateString())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spotify-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Spotify Connection\"), isSpotifyConnected ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"Your Spotify account is connected!\") : /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSpotifyConnect,\n    className: \"spotify-connect-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Connect to Spotify\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"playlists-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Your Playlists\"), isSpotifyConnected ? playlists.length > 0 ? /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"playlist-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, playlists.map(playlist => {\n    var _playlist$images$;\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: playlist.id,\n      className: \"playlist-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: (_playlist$images$ = playlist.images[0]) === null || _playlist$images$ === void 0 ? void 0 : _playlist$images$.url,\n      alt: playlist.name,\n      className: \"playlist-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    }, playlist.name));\n  })) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"No playlists found.\") : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, \"Connect to Spotify to see your playlists.\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLogout,\n    className: \"logout-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, \"Logout\"));\n};\nexport default UserProfile;","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","authEndpoint","clientId","redirectUri","scopes","loginEndpoint","encodeURIComponent","join","UserProfile","user","setUser","playlists","setPlaylists","isLoading","setIsLoading","error","setError","isSpotifyConnected","setIsSpotifyConnected","navigate","fetchUserData","token","localStorage","getItem","response","get","headers","Authorization","data","playlistsResponse","err","console","handleSpotifyConnect","window","location","href","handleLogout","removeItem","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","username","email","Date","createdAt","toLocaleDateString","onClick","length","map","playlist","_playlist$images$","key","id","src","images","url","alt","name"],"sources":["C:/Users/Admin/Music Website/Front end/src/screens/userProfile/userProfile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './UserProfile.css'; // Assuming you have a CSS file for styling\r\n\r\n// Spotify authorization constants\r\nconst authEndpoint = \"https://accounts.spotify.com/authorize?\";\r\nconst clientId = \"414414d8645b4746a08bc76b9abd6809\";\r\nconst redirectUri = \"http://localhost:3000/profile\"; \r\nconst scopes = [\"user-library-read\", \"user-read-private\", \"playlist-read-private\"];\r\n\r\nconst loginEndpoint = `${authEndpoint}client_id=${clientId}&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${encodeURIComponent(scopes.join(\" \"))}&response_type=token&show_dialog=true`;\r\n\r\nconst UserProfile = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [playlists, setPlaylists] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [isSpotifyConnected, setIsSpotifyConnected] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        navigate('/login');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/user', {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        setUser(response.data);\r\n        setIsSpotifyConnected(response.data.isSpotifyConnected || false);\r\n\r\n        if (response.data.isSpotifyConnected) {\r\n          const playlistsResponse = await axios.get('http://localhost:5000/api/playlists', {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          });\r\n          setPlaylists(playlistsResponse.data);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching user data:', err);\r\n        setError('Failed to load user data');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [navigate]);\r\n\r\n  const handleSpotifyConnect = () => {\r\n    window.location.href = loginEndpoint;\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    navigate('/login');\r\n  };\r\n\r\n  if (isLoading) return <div className=\"loading\">Loading...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"user-profile\">\r\n      <h1>Welcome, {user?.username}</h1>\r\n      <div className=\"user-info\">\r\n        <p><strong>Email:</strong> {user?.email}</p>\r\n        <p><strong>Member since:</strong> {new Date(user?.createdAt).toLocaleDateString()}</p>\r\n        {/* Add more user info here */}\r\n      </div>\r\n\r\n      <div className=\"spotify-section\">\r\n        <h2>Spotify Connection</h2>\r\n        {isSpotifyConnected ? (\r\n          <p>Your Spotify account is connected!</p>\r\n        ) : (\r\n          <button onClick={handleSpotifyConnect} className=\"spotify-connect-btn\">\r\n            Connect to Spotify\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"playlists-section\">\r\n        <h2>Your Playlists</h2>\r\n        {isSpotifyConnected ? (\r\n          playlists.length > 0 ? (\r\n            <ul className=\"playlist-list\">\r\n              {playlists.map(playlist => (\r\n                <li key={playlist.id} className=\"playlist-item\">\r\n                  <img src={playlist.images[0]?.url} alt={playlist.name} className=\"playlist-image\" />\r\n                  <span>{playlist.name}</span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p>No playlists found.</p>\r\n          )\r\n        ) : (\r\n          <p>Connect to Spotify to see your playlists.</p>\r\n        )}\r\n      </div>\r\n\r\n      <button onClick={handleLogout} className=\"logout-btn\">Logout</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}